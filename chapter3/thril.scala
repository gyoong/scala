val thrill = "Will"::"fill"::"until"::Nil

println("thrill", thrill)
println()
println("thrill(2)", thrill(2))
println()
println("thrill.count(s=>s.length==4)", thrill.count(s => s.length==4))
println()
println("thrill.drop(2)", thrill.drop(2))
println()
println("thrill.dropRight(2)", thrill.dropRight(2))
println()
print("thrill.exists(s=>s=='until')", thrill.exists(s => s=="until"))
println()
println("thrill.filter(s => s.length==4)", thrill.filter(s => s.length==4))
println()
println("thrill.forall(s => s.endsWith('l'))", thrill.forall(s => s.endsWith("l")))
println()
print("thrill.foreach(s => print(s)) ")
thrill.foreach(s => print(s))
println()
println()
print("thrill.foreach(print) ")
thrill.foreach(s => print(s))
println()
println()
println("thrill.head", thrill.head)
println()
println("thrill.init", thrill.init)
println()
println("thrill.isEmpty", thrill.isEmpty)
println()
println("thrill.last", thrill.last)
println()
println("thrill.length", thrill.length)
println()
println("thrill.map(s=>s+'y')", thrill.map(s=>s+"y"))
println()
println("thrill.mkString(',')", thrill.mkString(","))
println()
println("thrill.filterNot(s=>s.length==4)", thrill.filterNot(s=>s.length==4))
println()
println("thrill.reverse", thrill.reverse)
println()
println("thrill.sortWith((s,t)=>s.charAt(0).toLower<t.charAt(0).toLower)", thrill.sortWith((s,t)=>s.charAt(0).toLower<t.charAt(0).toLower))
println()
println("thrill.tail", thrill.tail)

